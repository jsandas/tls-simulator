name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "go.mod"
        cache: true
        
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        
    - name: Run golangci-lint
      run: |
        golangci-lint run --timeout=5m
        
    - name: Check gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'gofmt -s -w .'"
          gofmt -s -l .
          exit 1
        fi
        
    - name: Check go mod tidy
      run: |
        go mod tidy
        if [ -n "$(git status --porcelain)" ]; then
          echo "go.mod or go.sum is not tidy. Please run 'go mod tidy'"
          git diff
          exit 1
        fi

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "go.mod"
        cache: true
        
    - name: Run gosec security scanner
      uses: securego/gosec@master
      with:
        args: '-fmt sarif -out results.sarif ./...'
        
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: results.sarif

  test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "go.mod"
        cache: true
        
    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      with:
        docker-compose: true
        
    - name: Build the application
      run: |
        go mod download
        go build -v .
        
    - name: Run integration tests
      run: |
        make test-integration
      env:
        # Increase timeout for CI environment
        DOCKER_CLIENT_TIMEOUT: 120
        COMPOSE_HTTP_TIMEOUT: 120
        
    - name: Run specific TLS 1.3 tests
      run: |
        make test-tls13-chacha20
        make test-tls13-default
        
    - name: Cleanup Docker containers
      if: always()
      run: |
        make docker-down || true
        docker system prune -f || true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          *.log
          test-results/
        retention-days: 7
